<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dazi.core.modules.news.mapper.NewsMapper">
  <resultMap id="BaseResultMap" type="com.dazi.core.modules.news.model.News">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="column_id" jdbcType="INTEGER" property="columnId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.dazi.core.modules.news.model.News">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, column_id, create_time, modify_time
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <sql id="Where_Clause">
     where 1=1 
    <if test="record.id != null">
      and dn.id = #{record.id,jdbcType=INTEGER}
    </if>
    <if test="record.name != null and record.name != ''">
      and dn.name = #{record.name,jdbcType=VARCHAR}
    </if>
    <if test="record.columnId != null">
      and dn.column_id = #{record.columnId,jdbcType=INTEGER}
    </if>
    <if test="record.createTime != null">
      and dn.create_time = #{record.createTime,jdbcType=TIMESTAMP}
    </if>
    <if test="record.modifyTime != null">
      and dn.modify_time = #{record.modifyTime,jdbcType=TIMESTAMP}
    </if>
    <if test="record.content != null and record.content != ''">
      and dn.content = #{record.content,jdbcType=LONGVARCHAR}
    </if>
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from dz_news
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from dz_news
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dazi.core.modules.news.model.News">
    insert into dz_news (id, name, column_id, 
      create_time, modify_time, content
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{columnId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dazi.core.modules.news.model.News">
    insert into dz_news
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="columnId != null">
        column_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="columnId != null">
        #{columnId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dazi.core.modules.news.model.News">
    update dz_news
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="columnId != null">
        column_id = #{columnId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.dazi.core.modules.news.model.News">
    update dz_news
    set name = #{name,jdbcType=VARCHAR},
      column_id = #{columnId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dazi.core.modules.news.model.News">
    update dz_news
    set name = #{name,jdbcType=VARCHAR},
      column_id = #{columnId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectTotal" parameterType="com.dazi.core.modules.news.model.News" resultType="java.lang.Integer">
    select count(*) from dz_news dn
    <include refid="Where_Clause" />
  </select>
  <select id="selectList" parameterType="com.dazi.core.modules.news.model.News" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
     from dz_news dn
    <include refid="Where_Clause" />
    <if test="order != null and order.colName != null and order.colName != ''">
      order by ${order.colName}
      <if test="order.desc">
        desc
      </if>
    </if>
    <if test="count > 0">
      limit #{count} offset #{offset}
    </if>
  </select>
</mapper>